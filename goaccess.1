.TH goaccess 1 "MAY 2015" Linux "User Manuals"
.SH NAME
goaccess \- fast web log analyzer and interactive viewer.
.SH SYNOPSIS
.LP
.B goaccess [-f input-file][\-c][\-r][\-d][\-m][\-q][\-o][\-h][...]
.SH DESCRIPTION
.B goaccess
is a free (GPL) real-time web log analyzer and interactive viewer that runs in a
terminal in *nix systems. It provides fast and valuable HTTP statistics for
system administrators that require a visual server report on the fly. GoAccess
parses the specified web log file and outputs the data to the X terminal.
Features include:

.IP "General Statistics:"
This panel gives a summary of several metrics, some of them are: number of
valid and invalid requests, time taken to analyze the data set, unique
visitors, requested files, static files (CSS, ICO, JPG, etc) HTTP referrers,
404s, size of the parsed log file and bandwidth consumption.
.IP "Unique visitors"
This panel shows metrics such as hits, unique visitors and cumulative
bandwidth per date. HTTP requests containing the same IP, the same date, and
the same user agent are considered a unique visitor. By default, it includes web
crawlers/spiders.
.IP "Requested files"
This panel displays the most highly requested files on your web server. It
shows hits, unique visitors, and percentage, along with the cumulative
bandwidth, protocol, and the request method used.
.IP "Requested static files"
Lists the most frequently static files such as: JPG, CSS, SWF, JS, GIF, and PNG
file types, along with the same metrics as the last module. Additional static
files can be added to the configuration file.
.IP "404 or Not Found"
Listed like previous panels, containing the same metrics. This panel lists the
top recurrent HTTP 404s.
.IP "Hosts"
This panel has detailed information on the hosts themselves. It displays the
same metrics as previous panels, such as number of hits, visitors, cumulative
bandwidth. This is great to spot aggressive crawlers and identifying who's
eating your bandwidth.

Expanding the panel can display more information such as host's reverse DNS
lookup result, country of origin and city. If the
.I -a
argument is enabled, a list of user agents can be displayed by selecting the
desired IP address, and then pressing ENTER.
.IP "Operating Systems"
This panel will report which operating system the host used when it hit the
server. It attempts to provide the most specific version of each operating
system.
.IP "Browsers"
This panel will report which browser the host used when it hit the server. It
attempts to provide the most specific version of each browser.
.IP "Referrers URLs"
If the host in question accessed the site via another resource, or was
linked/diverted to you from another host, the URL they were referred from will
be provided in this panel. See command line option to ignore specific
referrers.
.IP "Referring Sites"
This panel will display only the host part but not the whole URL. The URL where
the request came from.
.IP "Keyphrases"
It reports keyphrases used on Google search, Google cache, and Google translate
that have lead to your web server. At present, it only supports Google search
queries. By default this panel is disabled. See `--ignore-panel` in your
configuration file to enable it.
.IP "Geo Location"
Determines where an IP address is geographically located. Statistics are broken
down by continent and country. It needs to be compiled with GeoLocation
support.
.IP "HTTP Status Codes"
The values of the numeric status code to HTTP requests.

.P
.I NOTE:
Optionally and if configured, all panels can display the average time taken to
serve the request.

.SH STORAGE
.P
There are three storage options that can be used with GoAccess. Choosing one
will depend on your environment and needs.
.TP
GLib Hash Tables
On-memory storage provides better performance at the cost of limiting the
dataset size to the amount of available physical memory. By default GoAccess
uses GLib Hash Tables. If your dataset can fit in memory, then this will
perform fine. It has average memory usage and pretty good performance. For
better performance with memory trade-off see Tokyo Cabinet on-memory hash
database.
.TP
Tokyo Cabinet On-Disk B+ Tree
Use this storage method for large datasets where it is not possible to fit
everything in memory. The B+ tree database is slower than any of the hash
databases since data has to be committed to disk. However, using an SSD greatly
increases the performance. You may also use this storage method if you need
data persistence to quickly load statistics at a later date.
.TP
Tokyo Cabinet On-Memory Hash Database
Although this may vary across different systems, in general the on-memory hash
database should perform slightly better than GLib Hash Tables.
.SH CONFIGURATION
.P
Multiple options can be used to configure GoAccess. For a complete up-to-date
list of configure options, run
.I ./configure --help
.TP
\fB\-\-enable-debug
Compile with debugging symbols and turn off compiler optimizations.
.TP
\fB\-\-enable-utf8
Compile with wide character support. Ncursesw is required.
.TP
\fB\-\-enable-geoip
Compile with GeoLocation support. MaxMind's GeoIP is required.
.TP
\fB\-\-enable-tcb=<memhash|btree>
Compile with Tokyo Cabinet storage support.
.I memhash
will utilize Tokyo Cabinet's on-memory hash database.
.I btree
will utilize Tokyo Cabinet's on-disk B+ Tree database.
.TP
\fB\-\-disable-zlib
Disable zlib compression on B+ Tree database.
.TP
\fB\-\-disable-bzip
Disable bzip2 compression on B+ Tree database.
.SH OPTIONS
.P
The following options can be supplied to the command or specified in the
configuration file. If specified in the configuration file, long options need
to be used without prepending --.
.TP
\fB\-\-time-format=<timeformat>
The time_format variable followed by a space, specifies the log format time
containing any combination of regular characters and special format specifiers.
They all begin with a percentage (%) sign. See `man strftime`.
.I %T or %H:%M:%S.

Note that if a timestamp is given in microseconds,
.I
%f
must be used as time-format
.TP
\fB\-\-date-format=<dateformat>
The date_format variable followed by a space, specifies the log format date
containing any combination of regular characters and special format specifiers.
They all begin with a percentage (%) sign. See `man strftime`.
.I %Y-%m-%d.

Note that if a timestamp is given in microseconds,
.I
%f
must be used as date-format
.TP
\fB\-\-log-format=<logformat>
The log_format variable followed by a space or
.I \\\\t
for tab-delimited, specifies the log format string.

Note that if there are spaces within the format, the string needs to be
enclosed in double quotes. Inner quotes need to be escaped.
.TP
\fB\-a \-\-agent-list
Enable a list of user-agents by host. For faster parsing, do not enable this
flag.
.TP
\fB\-c \-\-config-dialog
Prompt log/date configuration window on program start.
.TP
\fB\-d \-\-with-output-resolver
Enable IP resolver on HTML|JSON output.
.TP
\fB\-e \-\-exclude-ip=<IP|IP-range>
Exclude one or multiple IPv4/6, includes IP ranges. i.e.,
192.168.0.1-192.168.0.10
.TP
\fB\-f \-\-log-file=<logfile>
Specify the path to the input log file. If set in the config file, it will take
priority over -f from the command line.
.TP
\fB\-g \-\-std-geoip
Standard GeoIP database for less memory usage.
.TP
\fB\-h \-\-help
The help.
.TP
\fB\-H \-\-http-protocol
Include HTTP request protocol if found. This will create a request key
containing the request protocol + the actual request.
.TP
\fB\-i \-\-hl-header
Color highlight active panel.
.TP
\fB\-M \-\-http-method
Include HTTP request method if found. This will create a request key containing
the request method + the actual request.
.TP
\fB\-m \-\-with-mouse
Enable mouse support on main dashboard.
.TP
\fB\-o \-\-output-format=<json|csv>
Write output to stdout given one of the following formats:
.I csv
: Comma-separated values (CSV)
.I json
: JSON (JavaScript Object Notation)
.TP
\fB\-p \-\-config-file=<configfile>
Specify a custom configuration file to use. If set, it will take priority over
the global configuration file (if any).
.TP
\fB\-q \-\-no-query-string
Ignore request's query string. i.e.,  www.google.com/page.htm?query =>
www.google.com/page.htm.

.I Note:
Removing the query string can greatly decrease memory consumption, especially
on timestamped requests.
.TP
\fB\-r \-\-no-term-resolver
Disable IP resolver on terminal output.
.TP
\fB\-s \-\-storage
Display current storage method. i.e., B+ Tree, Hash.
.TP
\fB\-V \-\-version
Display version information and exit.
.TP
\fB\-\-color-scheme<1|2>
Choose among color schemes.
.I 1
for the default grey scheme.
.I 2
for the green scheme.
.TP
\fB\-\-no-color
Turn off colored output. This is the  default output on terminals that do not
support colors.
.TP
\fB\-\-html-report-title=<title>
Set HTML report page title and header.
.TP
\fB\-\-debug-file=<debugfile>
Send all debug messages to the specified file. Needs to be configured with
--enable-debug
.TP
\fB\-\-no-global-config
Do not load the global configuration file. This directory should normally be
/usr/local/etc, unless specified with
.I --sysconfdir=/dir.
.TP
\fB\-\-real-os
Display real OS names. e.g, Windows XP, Snow Leopard.
.TP
\fB\-\-sort-panel=<PANEL,FIELD,ORDER>
Sort panel on initial load. Sort options are separated by comma.  Options are
in the form: PANEL,METRIC,ORDER

.I Available metrics:
  BY_HITS
  BY_VISITORS
  BY_DATA
  BY_BW
  BY_USEC
  BY_PROT
  BY_MTHD

.I Available orders:
  ASC
  DESC
.TP
\fB\-\-static-file=<extension>
Add static file extension. e.g.:
.I .mp3
Extensions are case sensitive.
.TP
\fB\-\-double-decode
Decode double-encoded values. This includes, user-agent, request, and referer.
.TP
\fB\-\-ignore-crawlers
Ignore crawlers from being counted.
.TP
\fB\-\-ignore-panel=PANEL
Ignore parsing and displaying the given panel.

.I Available panels:
  VISITORS,
  REQUESTS,
  REQUESTS_STATIC,
  NOT_FOUND,
  HOSTS,
  OS,
  BROWSERS,
  VISIT_TIMES,
  REFERRERS,
  REFERRING_SITES,
  KEYPHRASES,
  GEO_LOCATION,
  STATUS_CODES,

.TP
\fB\-\-ignore-referer=<referer>
Ignore referers from being counted. Wildcards allowed. e.g.,
.I
*.domain.com
.I
ww?.domain.*
.TP
\fB\-\-444-as-404
Treat non-standard status code 444 as 404.
.TP
\fB\-\-4xx-to-unique-count
Add 4xx client errors to the unique visitors count.
.TP
\fB\-\-no-progress
Disable progress metrics [total requests/requests per second].
.TP
\fB\-\-geoip-database=<geofile>
Specify path to GeoIP database file. i.e., GeoLiteCity.dat. File needs to be
downloaded from maxmind.com. IPv4 and IPv6 files are supported as well.
.I Note:
`--geoip-city-data` is an alias of `--geoip-database`.
.TP
\fB\-\-keep-db-files
Persist parsed data into disk. This should be set to the first dataset prior to
use `load-from-disk`. Setting it to false will delete all database files when
exiting the program.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-load-from-disk
Load previously stored data from disk. Database files need to exist. See
.I keep-db-files.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-db-path=<dir>
Path where the on-disk database files are stored. The default value is the
.I /tmp
directory.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-xmmap=<num>
Set the size in bytes of the extra mapped memory. The default value is 0.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-cache-lcnum=<num>
Specifies the maximum number of leaf nodes to be cached. If it is not more than
0, the default value is specified. The default value is 1024. Setting a larger
value will increase speed performance, however, memory consumption will
increase. Lower value will decrease memory consumption.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-cache-ncnum=<num>
Specifies the maximum number of non-leaf nodes to be cached. If it is not more
than 0, the default value is specified. The default value is 512.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-tune-lmemb=<num>
Specifies the number of members in each leaf page. If it is not more than 0,
the default value is specified. The default value is 128.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-tune-nmemb=<num>
Specifies the number of members in each non-leaf page. If it is not more than
0, the default value is specified. The default value is 256.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-tune-bnum=<num>
Specifies the number of elements of the bucket array. If it is not more than 0,
the default value is specified. The default value is 32749. Suggested size of
the bucket array is about from 1 to 4 times of the number of all pages to be
stored.

Only if configured with --enable-tcb=btree
.TP
\fB\-\-compression=<zlib|bz2>
Specifies that each page is compressed with ZLIB|BZ2 encoding.

Only if configured with --enable-tcb=btree
.SH CUSTOM LOG/DATE FORMAT
GoAccess can parse virtually any web log format.
.P
Predefined options include, Common Log Format (CLF), Combined Log Format
(XLF/ELF), including virtual host, Amazon CloudFront (Download Distribution),
Google Cloud Storage and W3C format (IIS).
.P
GoAccess allows any custom format string as well.
.P
There are two ways to configure the log format.
The easiest is to run GoAccess with
.I -c
to prompt a configuration window. Otherwise, it can be configured under
~/.goaccessrc or the %sysconfdir%.
.IP "time_format"
The
.I time_format
variable followed by a space, specifies the log format time
containing any combination of regular characters and special format specifiers.
They all begin with a percentage (%) sign. See `man strftime`.
.I %T or %H:%M:%S.
.IP
.I Note:
If a timestamp is given in microseconds,
.I
%f
must be used as
.I
time_format
.IP "date_format"
The
.I date_format
variable followed by a space, specifies the log format date containing any
combination of regular characters and special format specifiers. They all begin
with a percentage (%) sign. See `man strftime`. e.g.,
.I %Y-%m-%d.
.IP
.I Note:
If a timestamp is given in microseconds,
.I
%f
must be used as
.I
date_format
.IP "log_format"
The
.I log_format
variable followed by a space or
.I \\\\t
, specifies the log format string.
.IP %x
A date and time field matching the
.I time_format
and
.I date_format
variables. This is used when a timestamp is given instead of the date and time
being in two separated variables.
.IP %t
time field matching the
.I time_format
variable.
.IP %d
date field matching the
.I date_format
variable.
.IP %h
host (the client IP address, either IPv4 or IPv6)
.IP %r
The request line from the client. This requires specific delimiters around the
request (as single quotes, double quotes, or anything else) to be parsable. If
not, we have to use a combination of special format specifiers as %m %U %H.
.IP %m
The request method.
.IP %U
The URL path requested (including any query string).
.IP %H
The request protocol.
.IP %s
The status code that the server sends back to the client.
.IP %b
The size of the object returned to the client.
.IP %R
The "Referrer" HTTP request header.
.IP %u
The user-agent HTTP request header.
.IP %D
The time taken to serve the request, in microseconds as a decimal number.
.IP %T
The time taken to serve the request, in seconds with milliseconds resolution.
.IP %L
The time taken to serve the request, in milliseconds as a decimal number.
.IP
.I Note:
If multiple time served specifiers are used at the same time, the first option
specified in the format string will take priority over the other specifiers.
.IP %^
Ignore this field.
.P
GoAccess
.I requires
the following fields:
.IP
.I %h
a valid IPv4/6
.IP
.I %d
a valid date
.IP
.I %r
the request
.SH INTERACTIVE MENU
.IP "F1 or h"
Main help.
.IP "F5"
Redraw main window.
.IP "q"
Quit the program, current window or collapse active module
.IP "o or  ENTER"
Expand selected module or open window
.IP "0-9 and Shift + 0"
Set selected module to active
.IP "j"
Scroll down within expanded module
.IP "k"
Scroll up within expanded module
.IP "c"
Set or change scheme color.
.IP "TAB"
Forward iteration of modules. Starts from current active module.
.IP "SHIFT + TAB"
Backward iteration of modules. Starts from current active module.
.IP "^f"
Scroll forward one screen within an active module.
.IP "^b"
Scroll backward one screen within an active module.
.IP "s"
Sort options for active module
.IP "/"
Search across all modules (regex allowed)
.IP "n"
Find the position of the next occurrence across all modules.
.IP "g"
Move to the first item or top of screen.
.IP "G"
Move to the last item or bottom of screen.
.SH EXAMPLES
The simplest and fastest usage would be:
.IP
# goaccess -f access.log
.P
That will generate an interactive text-only output.
.P
To generate full statistics we can run GoAccess as:
.IP
# goaccess -f access.log -a
.P
To generate an HTML report:
.IP
# goaccess -f access.log -a > report.html
.P
To generate a JSON file:
.IP
# goaccess -f access.log -a -d -o json > report.json
.P
To generate a CSV file:
.IP
# goaccess -f access.log -o csv > report.csv
.P
The
.I -a
flag indicates that we want to process an agent-list for every host parsed.
.P
The
.I -d
flag indicates that we want to enable the IP resolver on the HTML | JSON output.
(It will take longer time to output since it has to resolve all queries.)
.P
The
.I -c
flag will prompt the date and log format configuration window. Only when
curses is initialized.
.P
Filtering can be done through the use of pipes. For instance, using grep to
filter specific data and then pipe the output into GoAccess. This adds a great
amount of flexibility to what GoAccess can display. For example:
.P
If we would like to process all
.I access.log.*.gz
we can do:
.IP
#  zcat access.log.*.gz | goaccess
.P
OR
.IP
#  zcat -f access.log* | goaccess
.P
(On Mac OS X, use `gunzip -c` instead of `zcat`).
.P
Another useful pipe would be filtering dates out of the web log
.P
The following will get all HTTP requests starting on 05/Dec/2010 until
the end of the file.
.IP
# sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -a
.P
If we want to parse only a certain time-frame from DATE a to DATE b, we can do:
.IP
sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a
.P
.I Note that this could take longer time to parse depending on the speed of sed.
.P
To exclude a list of virtual hosts you can do the following:
.IP
grep -v "`cat exclude_vhost_list_file`" vhost_access.log | goaccess
.P
.B Also,
it is worth pointing out that if we want to run GoAccess at lower priority, we
can run it as:
.IP
# nice -n 19 goaccess -f access.log -a
.P
and if you don't want to install it on your server, you can still run it
from your local machine:
.IP
# ssh root@server 'cat /var/log/apache2/access.log' | goaccess -a
.P
.SH NOTES
For now, each active window has a total of 366 items. Eventually this will be
customizable.
.P
Piping a log to GoAccess will disable the real-time functionality. This is due
to the portability issue on determining the actual size of STDIN. However, a
future release *might* include this feature.
.SH BUGS
If you think you have found a bug, please send me an email to
.I goaccess@prosoftcorp.com
or use the issue tracker in https://github.com/allinurl/goaccess/issues
.SH AUTHOR
Gerardo Orellana <goaccess@prosoftcorp.com>
For more details about it, or new releases, please visit
http://goaccess.io
